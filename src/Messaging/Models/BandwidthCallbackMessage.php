<?php
/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace BandwidthLib\Messaging\Models;

/**
 * @todo Write general description for this model
 */
class BandwidthCallbackMessage implements \JsonSerializable
{
    /**
     * @todo Write general description for this property
     * @var string|null $time public property
     */
    public $time;

    /**
     * @todo Write general description for this property
     * @var string|null $type public property
     */
    public $type;

    /**
     * @todo Write general description for this property
     * @var string|null $to public property
     */
    public $to;

    /**
     * @todo Write general description for this property
     * @var string|null $errorCode public property
     */
    public $errorCode;

    /**
     * @todo Write general description for this property
     * @var string|null $description public property
     */
    public $description;

    /**
     * @todo Write general description for this property
     * @var \BandwidthLib\Messaging\Models\BandwidthMessage|null $message public property
     */
    public $message;

    /**
     * Constructor to set initial or default values of member properties
     */
    public function __construct()
    {
        if (6 == func_num_args()) {
            $this->time        = func_get_arg(0);
            $this->type        = func_get_arg(1);
            $this->to          = func_get_arg(2);
            $this->errorCode   = func_get_arg(3);
            $this->description = func_get_arg(4);
            $this->message     = func_get_arg(5);
        }
    }

    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['time']        = $this->time;
        $json['type']        = $this->type;
        $json['to']          = $this->to;
        $json['errorCode']   = $this->errorCode;
        $json['description'] = $this->description;
        $json['message']     = $this->message;

        return array_filter($json);
    }
}

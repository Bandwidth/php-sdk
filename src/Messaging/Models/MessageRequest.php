<?php

declare(strict_types=1);

/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace BandwidthLib\Messaging\Models;

class MessageRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $applicationId;

    /**
     * @var string[]
     */
    private $to;

    /**
     * @var string
     */
    private $from;

    /**
     * @var string|null
     */
    private $text;

    /**
     * @var string[]|null
     */
    private $media;

    /**
     * @var string|null
     */
    private $tag;

    /**
     * @var string|null
     */
    private $priority;

    /**
     * @param string $applicationId
     * @param string[] $to
     * @param string $from
     */
    public function __construct(string $applicationId, array $to, string $from)
    {
        $this->applicationId = $applicationId;
        $this->to = $to;
        $this->from = $from;
    }

    /**
     * Returns Application Id.
     *
     * The ID of the Application your from number is associated with in the Bandwidth Phone Number
     * Dashboard.
     */
    public function getApplicationId(): string
    {
        return $this->applicationId;
    }

    /**
     * Sets Application Id.
     *
     * The ID of the Application your from number is associated with in the Bandwidth Phone Number
     * Dashboard.
     *
     * @required
     * @maps applicationId
     */
    public function setApplicationId(string $applicationId): void
    {
        $this->applicationId = $applicationId;
    }

    /**
     * Returns To.
     *
     * The phone number(s) the message should be sent to in E164 format
     *
     * @return string[]
     */
    public function getTo(): array
    {
        return $this->to;
    }

    /**
     * Sets To.
     *
     * The phone number(s) the message should be sent to in E164 format
     *
     * @required
     * @maps to
     *
     * @param string[] $to
     */
    public function setTo(array $to): void
    {
        $this->to = $to;
    }

    /**
     * Returns From.
     *
     * One of your telephone numbers the message should come from in E164 format
     */
    public function getFrom(): string
    {
        return $this->from;
    }

    /**
     * Sets From.
     *
     * One of your telephone numbers the message should come from in E164 format
     *
     * @required
     * @maps from
     */
    public function setFrom(string $from): void
    {
        $this->from = $from;
    }

    /**
     * Returns Text.
     *
     * The contents of the text message. Must be 2048 characters or less.
     */
    public function getText(): ?string
    {
        return $this->text;
    }

    /**
     * Sets Text.
     *
     * The contents of the text message. Must be 2048 characters or less.
     *
     * @maps text
     */
    public function setText(?string $text): void
    {
        $this->text = $text;
    }

    /**
     * Returns Media.
     *
     * A list of URLs to include as media attachments as part of the message.
     *
     * @return string[]|null
     */
    public function getMedia(): ?array
    {
        return $this->media;
    }

    /**
     * Sets Media.
     *
     * A list of URLs to include as media attachments as part of the message.
     *
     * @maps media
     *
     * @param string[]|null $media
     */
    public function setMedia(?array $media): void
    {
        $this->media = $media;
    }

    /**
     * Returns Tag.
     *
     * A custom string that will be included in callback events of the message. Max 1024 characters
     */
    public function getTag(): ?string
    {
        return $this->tag;
    }

    /**
     * Sets Tag.
     *
     * A custom string that will be included in callback events of the message. Max 1024 characters
     *
     * @maps tag
     */
    public function setTag(?string $tag): void
    {
        $this->tag = $tag;
    }

    /**
     * Returns Priority.
     *
     * The message's priority, currently for toll-free or short code SMS only. Messages with a priority
     * value of `"high"` are given preference over your other traffic.
     */
    public function getPriority(): ?string
    {
        return $this->priority;
    }

    /**
     * Sets Priority.
     *
     * The message's priority, currently for toll-free or short code SMS only. Messages with a priority
     * value of `"high"` are given preference over your other traffic.
     *
     * @maps priority
     */
    public function setPriority(?string $priority): void
    {
        $this->priority = $priority;
    }

    /**
     * Encode this object to JSON
     *
     * @return mixed
     */
    public function jsonSerialize()
    {
        $json = [];
        $json['applicationId'] = $this->applicationId;
        $json['to']            = $this->to;
        $json['from']          = $this->from;
        $json['text']          = $this->text;
        $json['media']         = $this->media;
        $json['tag']           = $this->tag;
        $json['priority']      = $this->priority;

        return array_filter($json, function ($val) {
            return $val !== null;
        });
    }
}

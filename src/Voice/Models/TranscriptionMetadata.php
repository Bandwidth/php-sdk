<?php

declare(strict_types=1);

/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace BandwidthLib\Voice\Models;

class TranscriptionMetadata implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var string|null
     */
    private $completedTime;

    /**
     * @var string|null
     */
    private $url;

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Status.
     *
     * The current status of the transcription. Current values are 'none', 'processing', 'available',
     * 'error', 'timeout', 'file-size-too-big', and 'file-size-too-small'. Additional states may be added
     * in the future, so your application must be tolerant of unknown values.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * The current status of the transcription. Current values are 'none', 'processing', 'available',
     * 'error', 'timeout', 'file-size-too-big', and 'file-size-too-small'. Additional states may be added
     * in the future, so your application must be tolerant of unknown values.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Completed Time.
     */
    public function getCompletedTime(): ?string
    {
        return $this->completedTime;
    }

    /**
     * Sets Completed Time.
     *
     * @maps completedTime
     */
    public function setCompletedTime(?string $completedTime): void
    {
        $this->completedTime = $completedTime;
    }

    /**
     * Returns Url.
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     *
     * @maps url
     */
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }

    /**
     * Encode this object to JSON
     *
     * @return mixed
     */
    public function jsonSerialize()
    {
        $json = [];
        $json['id']            = $this->id;
        $json['status']        = $this->status;
        $json['completedTime'] = $this->completedTime;
        $json['url']           = $this->url;

        return array_filter($json, function ($val) {
            return $val !== null;
        });
    }
}

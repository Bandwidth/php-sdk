<?php

declare(strict_types=1);

/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace BandwidthLib\Voice\Models;

class CreateCallRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $from;

    /**
     * @var string
     */
    private $to;

    /**
     * @var string|null
     */
    private $uui;

    /**
     * @var float|null
     */
    private $callTimeout;

    /**
     * @var float|null
     */
    private $callbackTimeout;

    /**
     * @var string
     */
    private $answerUrl;

    /**
     * @var string|null
     */
    private $answerFallbackUrl;

    /**
     * @var string|null
     */
    private $username;

    /**
     * @var string|null
     */
    private $password;

    /**
     * @var string|null
     */
    private $fallbackUsername;

    /**
     * @var string|null
     */
    private $fallbackPassword;

    /**
     * @var string|null
     */
    private $answerMethod;

    /**
     * @var string|null
     */
    private $answerFallbackMethod;

    /**
     * @var string|null
     */
    private $disconnectUrl;

    /**
     * @var string|null
     */
    private $disconnectMethod;

    /**
     * @var string|null
     */
    private $tag;

    /**
     * @var string
     */
    private $applicationId;

    /**
     * @param string $from
     * @param string $to
     * @param string $answerUrl
     * @param string $applicationId
     */
    public function __construct(string $from, string $to, string $answerUrl, string $applicationId)
    {
        $this->from = $from;
        $this->to = $to;
        $this->answerUrl = $answerUrl;
        $this->applicationId = $applicationId;
    }

    /**
     * Returns From.
     *
     * Format is E164
     */
    public function getFrom(): string
    {
        return $this->from;
    }

    /**
     * Sets From.
     *
     * Format is E164
     *
     * @required
     * @maps from
     */
    public function setFrom(string $from): void
    {
        $this->from = $from;
    }

    /**
     * Returns To.
     *
     * Format is E164 or SIP URI
     */
    public function getTo(): string
    {
        return $this->to;
    }

    /**
     * Sets To.
     *
     * Format is E164 or SIP URI
     *
     * @required
     * @maps to
     */
    public function setTo(string $to): void
    {
        $this->to = $to;
    }

    /**
     * Returns Uui.
     *
     * When calling a SIP URI, this will be sent as the 'User-To-User' header within the initial INVITE. It
     * must end with an 'encoding' parameter as described in https://tools.ietf.org/html/rfc7433. This
     * header cannot exceed 256 characters, including the encoding parameter.
     */
    public function getUui(): ?string
    {
        return $this->uui;
    }

    /**
     * Sets Uui.
     *
     * When calling a SIP URI, this will be sent as the 'User-To-User' header within the initial INVITE. It
     * must end with an 'encoding' parameter as described in https://tools.ietf.org/html/rfc7433. This
     * header cannot exceed 256 characters, including the encoding parameter.
     *
     * @maps uui
     */
    public function setUui(?string $uui): void
    {
        $this->uui = $uui;
    }

    /**
     * Returns Call Timeout.
     */
    public function getCallTimeout(): ?float
    {
        return $this->callTimeout;
    }

    /**
     * Sets Call Timeout.
     *
     * @maps callTimeout
     */
    public function setCallTimeout(?float $callTimeout): void
    {
        $this->callTimeout = $callTimeout;
    }

    /**
     * Returns Callback Timeout.
     */
    public function getCallbackTimeout(): ?float
    {
        return $this->callbackTimeout;
    }

    /**
     * Sets Callback Timeout.
     *
     * @maps callbackTimeout
     */
    public function setCallbackTimeout(?float $callbackTimeout): void
    {
        $this->callbackTimeout = $callbackTimeout;
    }

    /**
     * Returns Answer Url.
     */
    public function getAnswerUrl(): string
    {
        return $this->answerUrl;
    }

    /**
     * Sets Answer Url.
     *
     * @required
     * @maps answerUrl
     */
    public function setAnswerUrl(string $answerUrl): void
    {
        $this->answerUrl = $answerUrl;
    }

    /**
     * Returns Answer Fallback Url.
     */
    public function getAnswerFallbackUrl(): ?string
    {
        return $this->answerFallbackUrl;
    }

    /**
     * Sets Answer Fallback Url.
     *
     * @maps answerFallbackUrl
     */
    public function setAnswerFallbackUrl(?string $answerFallbackUrl): void
    {
        $this->answerFallbackUrl = $answerFallbackUrl;
    }

    /**
     * Returns Username.
     */
    public function getUsername(): ?string
    {
        return $this->username;
    }

    /**
     * Sets Username.
     *
     * @maps username
     */
    public function setUsername(?string $username): void
    {
        $this->username = $username;
    }

    /**
     * Returns Password.
     */
    public function getPassword(): ?string
    {
        return $this->password;
    }

    /**
     * Sets Password.
     *
     * @maps password
     */
    public function setPassword(?string $password): void
    {
        $this->password = $password;
    }

    /**
     * Returns Fallback Username.
     */
    public function getFallbackUsername(): ?string
    {
        return $this->fallbackUsername;
    }

    /**
     * Sets Fallback Username.
     *
     * @maps fallbackUsername
     */
    public function setFallbackUsername(?string $fallbackUsername): void
    {
        $this->fallbackUsername = $fallbackUsername;
    }

    /**
     * Returns Fallback Password.
     */
    public function getFallbackPassword(): ?string
    {
        return $this->fallbackPassword;
    }

    /**
     * Sets Fallback Password.
     *
     * @maps fallbackPassword
     */
    public function setFallbackPassword(?string $fallbackPassword): void
    {
        $this->fallbackPassword = $fallbackPassword;
    }

    /**
     * Returns Answer Method.
     */
    public function getAnswerMethod(): ?string
    {
        return $this->answerMethod;
    }

    /**
     * Sets Answer Method.
     *
     * @maps answerMethod
     */
    public function setAnswerMethod(?string $answerMethod): void
    {
        $this->answerMethod = $answerMethod;
    }

    /**
     * Returns Answer Fallback Method.
     */
    public function getAnswerFallbackMethod(): ?string
    {
        return $this->answerFallbackMethod;
    }

    /**
     * Sets Answer Fallback Method.
     *
     * @maps answerFallbackMethod
     */
    public function setAnswerFallbackMethod(?string $answerFallbackMethod): void
    {
        $this->answerFallbackMethod = $answerFallbackMethod;
    }

    /**
     * Returns Disconnect Url.
     */
    public function getDisconnectUrl(): ?string
    {
        return $this->disconnectUrl;
    }

    /**
     * Sets Disconnect Url.
     *
     * @maps disconnectUrl
     */
    public function setDisconnectUrl(?string $disconnectUrl): void
    {
        $this->disconnectUrl = $disconnectUrl;
    }

    /**
     * Returns Disconnect Method.
     */
    public function getDisconnectMethod(): ?string
    {
        return $this->disconnectMethod;
    }

    /**
     * Sets Disconnect Method.
     *
     * @maps disconnectMethod
     */
    public function setDisconnectMethod(?string $disconnectMethod): void
    {
        $this->disconnectMethod = $disconnectMethod;
    }

    /**
     * Returns Tag.
     */
    public function getTag(): ?string
    {
        return $this->tag;
    }

    /**
     * Sets Tag.
     *
     * @maps tag
     */
    public function setTag(?string $tag): void
    {
        $this->tag = $tag;
    }

    /**
     * Returns Application Id.
     */
    public function getApplicationId(): string
    {
        return $this->applicationId;
    }

    /**
     * Sets Application Id.
     *
     * @required
     * @maps applicationId
     */
    public function setApplicationId(string $applicationId): void
    {
        $this->applicationId = $applicationId;
    }

    /**
     * Encode this object to JSON
     *
     * @return mixed
     */
    public function jsonSerialize()
    {
        $json = [];
        $json['from']                 = $this->from;
        $json['to']                   = $this->to;
        $json['uui']                  = $this->uui;
        $json['callTimeout']          = $this->callTimeout;
        $json['callbackTimeout']      = $this->callbackTimeout;
        $json['answerUrl']            = $this->answerUrl;
        $json['answerFallbackUrl']    = $this->answerFallbackUrl;
        $json['username']             = $this->username;
        $json['password']             = $this->password;
        $json['fallbackUsername']     = $this->fallbackUsername;
        $json['fallbackPassword']     = $this->fallbackPassword;
        $json['answerMethod']         = $this->answerMethod;
        $json['answerFallbackMethod'] = $this->answerFallbackMethod;
        $json['disconnectUrl']        = $this->disconnectUrl;
        $json['disconnectMethod']     = $this->disconnectMethod;
        $json['tag']                  = $this->tag;
        $json['applicationId']        = $this->applicationId;

        return array_filter($json, function ($val) {
            return $val !== null;
        });
    }
}

<?php
/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BandwidthLib\PhoneNumberLookup\Models;

/**
 *If requestId exists, the result for that request is returned. See the Examples for details on the
 * various responses that you can receive.  Generally, if you see a Response Code of 0 in a result for
 * a TN, information will be available for it.  Any other Response Code will indicate no information
 * was available for the TN.
 */
class OrderStatus implements \JsonSerializable
{
    /**
     * The requestId.
     * @var string|null $requestId public property
     */
    public $requestId;

    /**
     * The status of the request (IN_PROGRESS, COMPLETE, PARTIAL_COMPLETE, or FAILED).
     * @var string|null $status public property
     */
    public $status;

    /**
     * The telephone numbers whose lookup failed
     * @var array|null $failedTelephoneNumbers public property
     */
    public $failedTelephoneNumbers;

    /**
     * The carrier information results for the specified telephone number.
     * @var \BandwidthLib\PhoneNumberLookup\Models\Result[]|null $result public property
     */
    public $result;

    /**
     * Constructor to set initial or default values of member properties
     */
    public function __construct()
    {
        if (4 == func_num_args()) {
            $this->requestId              = func_get_arg(0);
            $this->status                 = func_get_arg(1);
            $this->failedTelephoneNumbers = func_get_arg(2);
            $this->result                 = func_get_arg(3);
        }
    }

    /**
     * Encode this object to JSON
     */
    public function jsonSerialize(): mixed
    {
        $json = array();
        $json['requestId']              = $this->requestId;
        $json['status']                 = $this->status;
        $json['failedTelephoneNumbers'] =
            isset($this->failedTelephoneNumbers) ?
            array_values($this->failedTelephoneNumbers) : null;
        $json['result']                 = isset($this->result) ?
            array_values($this->result) : null;

        return array_filter($json);
    }
}

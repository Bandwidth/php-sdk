<?php

declare(strict_types=1);

/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace BandwidthLib\PhoneNumberLookup\Models;

class Result implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $responseCode;

    /**
     * @var string|null
     */
    private $message;

    /**
     * @var string|null
     */
    private $e164Format;

    /**
     * @var string|null
     */
    private $formatted;

    /**
     * @var string|null
     */
    private $country;

    /**
     * @var string|null
     */
    private $lineType;

    /**
     * @var string|null
     */
    private $lineProvider;

    /**
     * @var string|null
     */
    private $mobileCountryCode;

    /**
     * @var string|null
     */
    private $mobileNetworkCode;

    /**
     * Returns Response Code.
     *
     * Our vendor's response code.
     */
    public function getResponseCode(): ?int
    {
        return $this->responseCode;
    }

    /**
     * Sets Response Code.
     *
     * Our vendor's response code.
     *
     * @maps Response Code
     */
    public function setResponseCode(?int $responseCode): void
    {
        $this->responseCode = $responseCode;
    }

    /**
     * Returns Message.
     *
     * Message associated with the response code.
     */
    public function getMessage(): ?string
    {
        return $this->message;
    }

    /**
     * Sets Message.
     *
     * Message associated with the response code.
     *
     * @maps Message
     */
    public function setMessage(?string $message): void
    {
        $this->message = $message;
    }

    /**
     * Returns E 164 Format.
     *
     * The telephone number in E.164 format.
     */
    public function getE164Format(): ?string
    {
        return $this->e164Format;
    }

    /**
     * Sets E 164 Format.
     *
     * The telephone number in E.164 format.
     *
     * @maps E.164 Format
     */
    public function setE164Format(?string $e164Format): void
    {
        $this->e164Format = $e164Format;
    }

    /**
     * Returns Formatted.
     *
     * The formatted version of the telephone number.
     */
    public function getFormatted(): ?string
    {
        return $this->formatted;
    }

    /**
     * Sets Formatted.
     *
     * The formatted version of the telephone number.
     *
     * @maps Formatted
     */
    public function setFormatted(?string $formatted): void
    {
        $this->formatted = $formatted;
    }

    /**
     * Returns Country.
     *
     * The country of the telephone number.
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     *
     * The country of the telephone number.
     *
     * @maps Country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Line Type.
     *
     * The line type of the telephone number.
     */
    public function getLineType(): ?string
    {
        return $this->lineType;
    }

    /**
     * Sets Line Type.
     *
     * The line type of the telephone number.
     *
     * @maps Line Type
     */
    public function setLineType(?string $lineType): void
    {
        $this->lineType = $lineType;
    }

    /**
     * Returns Line Provider.
     *
     * The service provider of the telephone number.
     */
    public function getLineProvider(): ?string
    {
        return $this->lineProvider;
    }

    /**
     * Sets Line Provider.
     *
     * The service provider of the telephone number.
     *
     * @maps Line Provider
     */
    public function setLineProvider(?string $lineProvider): void
    {
        $this->lineProvider = $lineProvider;
    }

    /**
     * Returns Mobile Country Code.
     *
     * The first half of the Home Network Identity (HNI).
     */
    public function getMobileCountryCode(): ?string
    {
        return $this->mobileCountryCode;
    }

    /**
     * Sets Mobile Country Code.
     *
     * The first half of the Home Network Identity (HNI).
     *
     * @maps Mobile Country Code
     */
    public function setMobileCountryCode(?string $mobileCountryCode): void
    {
        $this->mobileCountryCode = $mobileCountryCode;
    }

    /**
     * Returns Mobile Network Code.
     *
     * The second half of the HNI.
     */
    public function getMobileNetworkCode(): ?string
    {
        return $this->mobileNetworkCode;
    }

    /**
     * Sets Mobile Network Code.
     *
     * The second half of the HNI.
     *
     * @maps Mobile Network Code
     */
    public function setMobileNetworkCode(?string $mobileNetworkCode): void
    {
        $this->mobileNetworkCode = $mobileNetworkCode;
    }

    /**
     * Encode this object to JSON
     *
     * @return mixed
     */
    public function jsonSerialize()
    {
        $json = [];
        $json['Response Code']     = $this->responseCode;
        $json['Message']           = $this->message;
        $json['E.164 Format']      = $this->e164Format;
        $json['Formatted']         = $this->formatted;
        $json['Country']           = $this->country;
        $json['Line Type']         = $this->lineType;
        $json['Line Provider']     = $this->lineProvider;
        $json['Mobile Country Code'] = $this->mobileCountryCode;
        $json['Mobile Network Code'] = $this->mobileNetworkCode;

        return array_filter($json, function ($val) {
            return $val !== null;
        });
    }
}

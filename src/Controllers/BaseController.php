<?php
/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace BandwidthLib\Controllers;

use BandwidthLib\Http\HttpCallBack;
use BandwidthLib\Http\HttpContext;
use BandwidthLib\Http\HttpResponse;
use BandwidthLib\APIException;
use \apimatic\jsonmapper\JsonMapper;

/**
* Base controller
*/
class BaseController
{
    /**
     * User-agent to be sent with API calls
     * @var string
     */
    const USER_AGENT = 'php-sdk-refs/tags/php2.8.0';

    /**
     * HttpCallBack instance associated with this controller
     * @var HttpCallBack
     */
    private $httpCallBack = null;

    /**
     * Configuration instance
     * @var \BandwidthLib\Configuration
     */
    protected $config;

    /**
     * Constructor that sets the timeout of requests
     */
    protected function __construct($config, $httpCallBack = null)
    {
        $this->config = $config;

        if (isset($httpCallBack)) {
            $this->httpCallBack = $httpCallBack;
        }
    }

    /**
     * Get HttpCallBack for this controller
     * @return HttpCallBack The HttpCallBack object set for this controller
     */
    public function getHttpCallBack()
    {
        return $this->httpCallBack;
    }

    /**
     * Get a new JsonMapper instance for mapping objects
     * @return \apimatic\jsonmapper\JsonMapper JsonMapper instance
     */
    protected function getJsonMapper()
    {
        $mapper = new JsonMapper();
        return $mapper;
    }

    protected function validateResponse(HttpResponse $response, HttpContext $_httpContext)
    {
        if (($response->getStatusCode() < 200) || ($response->getStatusCode() > 208)) { //[200,208] = HTTP OK
            throw new APIException('HTTP Response Not OK', $_httpContext);
        }
    }
}
